<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--  props  -->
    <property name="LOGDIR"
              value="logs"
              scope="context"/>
    <property name="LOG_FILE"
              value="Server"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN"
              value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN_DEBUG"
              value="${FILE_LOG_PATTERN_DEBUG:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} [%t]: %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <timestamp key="FOLDER_TIME_STAMP"
               datePattern="yyyy-MM-dd HH-mm"/>

    <!-- from spring -->
    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--  logger -->
    <logger name="org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver"
            level="OFF">
    </logger>

    <logger name="org.springframework.web.servlet.handler.DefaultHandlerExceptionResolver"
            level="OFF">
    </logger>
    <logger name="org.apache.catalina.startup.DigesterFactory"
            level="ERROR"/>
    <logger name="org.apache.catalina.util.LifecycleBase"
            level="ERROR"/>
    <logger name="org.apache.coyote.http11.Http11NioProtocol"
            level="WARN"/>
    <logger name="org.apache.sshd.common.util.SecurityUtils"
            level="WARN"/>
    <logger name="org.apache.tomcat.util.net.NioSelectorPool"
            level="WARN"/>
    <logger name="org.eclipse.jetty.util.component.AbstractLifeCycle"
            level="ERROR"/>
    <logger name="org.hibernate.validator.internal.util.Version"
            level="WARN"/>
    <logger name="io.micrometer"
            level="OFF"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor"
            level="INFO"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"
            level="INFO"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor"
            level="INFO"/>
    <logger name="org.apache.http"
            level="INFO"/>
    <logger name="org.springframework.web.servlet.DispatcherServlet"
            level="INFO"/>
    <logger name="org.springframework.web.context.request.async.WebAsyncManager"
            level="INFO"/>
    <logger name="me.xkuyax.cloudsystem.server.handler.ServerMessageHandler"
            level="INFO"/>
    <logger name="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
            level="INFO"/>
    <logger name="software.amazon.awssdk"
            level="INFO"/>

    <!--  console appender  -->
    <appender name="CONSOLE"
              class="me.xkuyax.utils.log.JLine3Appender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- for each logger create file, rollsover when yyyy-MM-dd changes or the maxFileSize kicks in -->
    <appender name="SIFT"
              class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator class="me.xkuyax.utils.log.LoggerNameBasedDiscriminator"/>
        <sift>
            <appender name="FILE-${loggerName}"
                      class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${LOGDIR}/${FOLDER_TIME_STAMP}/${loggerName}.log</file>
                <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                    <fileNamePattern>${LOGDIR}/${FOLDER_TIME_STAMP}/${loggerName}-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
                    <maxFileSize>10MB</maxFileSize>
                    <maxHistory>10</maxHistory>
                    <totalSizeCap>100MB</totalSizeCap>
                </rollingPolicy>
                <encoder>
                    <charset>UTF-8</charset>
                    <pattern>${FILE_LOG_PATTERN_DEBUG}</pattern>
                </encoder>
            </appender>
        </sift>
    </appender>

    <!-- root file appender same as above from rule set-->
    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOGDIR}/${FOLDER_TIME_STAMP}/${LOG_FILE}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGDIR}/${FOLDER_TIME_STAMP}/${LOG_FILE}-%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
            <maxFileSize>5MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <totalSizeCap>500MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <!--  root  -->
    <root level="DEBUG">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="SIFT"/>
    </root>
</configuration>
